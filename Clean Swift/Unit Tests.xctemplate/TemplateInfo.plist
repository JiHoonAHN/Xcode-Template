<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>DefaultCompletionName</key>
	<string>MyScene</string>
	<key>Description</key>
	<string>This generates unit tests for your scene using Uncle Bob&apos;s clean architecture. It consists of three test files for view controller, interactor, and presenter.</string>
	<key>Kind</key>
	<string>Xcode.IDEKit.TextSubstitutionFileTemplateKind</string>
	<key>Options</key>
	<array>
		<dict>
			<key>Description</key>
			<string>The name of the scene to create tests for</string>
			<key>Identifier</key>
			<string>sceneName</string>
			<key>Name</key>
			<string>Scene Name:</string>
			<key>NotPersisted</key>
			<true/>
			<key>Required</key>
			<true/>
			<key>Type</key>
			<string>text</string>
		</dict>
		<dict>
			<key>Default</key>
			<string>___VARIABLE_sceneName:identifier___Scene</string>
			<key>Identifier</key>
			<string>productName</string>
			<key>Type</key>
			<string>static</string>
		</dict>
		<dict>
			<key>Default</key>
			<string>___VARIABLE_sceneName:identifier___SceneViewControllerTests</string>
			<key>Description</key>
			<string>The view controller tests name</string>
			<key>Identifier</key>
			<string>viewControllerTestsName</string>
			<key>Name</key>
			<string>View Controller Tests Name:</string>
			<key>Required</key>
			<true/>
			<key>Type</key>
			<string>static</string>
		</dict>
		<dict>
			<key>Default</key>
			<string>___VARIABLE_sceneName:identifier___SceneInteractorTests</string>
			<key>Description</key>
			<string>The interactor tests name</string>
			<key>Identifier</key>
			<string>interactorTestsName</string>
			<key>Name</key>
			<string>Interactor Tests Name:</string>
			<key>Required</key>
			<true/>
			<key>Type</key>
			<string>static</string>
		</dict>
		<dict>
			<key>Default</key>
			<string>___VARIABLE_sceneName:identifier___ScenePresenterTests</string>
			<key>Description</key>
			<string>The presenter tests name</string>
			<key>Identifier</key>
			<string>presenterTestsName</string>
			<key>Name</key>
			<string>Presenter Tests Name:</string>
			<key>Required</key>
			<true/>
			<key>Type</key>
			<string>static</string>
		</dict>
		<dict>
			<key>Default</key>
			<string>___VARIABLE_sceneName:identifier___SceneConfiguratorTests</string>
			<key>Description</key>
			<string>The configurator tests name</string>
			<key>Identifier</key>
			<string>configuratorTestsName</string>
			<key>Name</key>
			<string>Configurator Tests Name:</string>
			<key>Required</key>
			<true/>
			<key>Type</key>
			<string>static</string>
		</dict>
		<dict>
			<key>Default</key>
			<string>___VARIABLE_sceneName:identifier___SceneRouterTests</string>
			<key>Description</key>
			<string>The router tests name</string>
			<key>Identifier</key>
			<string>routerTestsName</string>
			<key>Name</key>
			<string>Router Tests Name:</string>
			<key>Required</key>
			<true/>
			<key>Type</key>
			<string>static</string>
		</dict>
		<dict>
			<key>Identifier</key>
			<string>AddWorkerTest</string>
			<key>Required</key>
			<string>true</string>
			<key>Name</key>
			<string>add workerTest</string>
			<key>Description</key>
			<string>This Clean Swift owns the views of the workerTest
</string>
			<key>Type</key>
			<string>checkbox</string>
			<key>Default</key>
			<string>true</string>
			<key>NotPersisted</key>
			<string>true</string>
		</dict>
		<dict>
			<key>Identifier</key>
			<string>AddViewTest</string>
			<key>Required</key>
			<string>true</string>
			<key>Name</key>
			<string>add ViewTest</string>
			<key>Description</key>
			<string>This Clean Swift owns the views of the View Test
</string>
			<key>Type</key>
			<string>checkbox</string>
			<key>Default</key>
			<string>true</string>
			<key>NotPersisted</key>
			<string>true</string>
		</dict>
	</array>
	<key>Platforms</key>
	<array>
		<string>com.apple.platform.iphoneos</string>
	</array>
	<key>SortOrder</key>
	<string>7</string>
	<key>Summary</key>
	<string>This generates unit tests for your scene using Uncle Bob&apos;s clean architecture.</string>
</dict>
</plist>
